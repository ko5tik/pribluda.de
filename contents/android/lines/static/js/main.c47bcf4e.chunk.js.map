{"version":3,"sources":["App.js","index.js"],"names":["msToTime","duration","parseInt","seconds","Math","floor","minutes","hours","App","props","state","scores","stats","totalGames","totalTime","fetch","then","response","json","data","setState","this","id","className","map","score","idx","name","points","s","time","moment","format","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2OAyEA,SAASA,EAASC,GACKC,SAAUD,EAAW,IAAQ,KAAhD,IACIE,EAAUC,KAAKC,MAAOJ,EAAW,IAAQ,IACzCK,EAAUF,KAAKC,MAAOJ,EAAQ,IAAkB,IAChDM,EAAQH,KAAKC,MAAOJ,EAAQ,KAAsB,IAOtD,OANWG,KAAKC,MAAOJ,EAAQ,OAMhB,KAJfM,EAASA,EAAQ,GAAM,IAAMA,EAAQA,GAIR,KAH7BD,EAAWA,EAAU,GAAM,IAAMA,EAAUA,GAGE,KAF7CH,EAAWA,EAAU,GAAM,IAAMA,EAAUA,GAQhCK,M,kDAlFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,OAAQ,GACRC,MAAO,CACHC,WAAY,EACZC,UAAW,IAPJ,E,qDAYnB,WAAqB,IAAD,OAChBC,MAjBO,2DAkBFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACT,OAAQQ,OAEzCJ,MApBM,kDAqBDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACR,MAAOO,S,oBAG5C,WAAU,IACCR,EAAUU,KAAKX,MAAfC,OAEP,OACI,sBAAKW,GAAG,aAAR,UACI,qBAAIA,GAAG,QAAP,UACI,8CACA,6BAAKD,KAAKX,MAAME,MAAMC,aACtB,8DACA,6BAAKb,EAASqB,KAAKX,MAAME,MAAME,gBAEnC,wBAAOS,UAAU,aAAjB,UACI,uBAAOA,UAAU,SAAjB,SACA,+BACI,oBAAIA,UAAU,eAAd,eACA,sCACA,wCACA,4CACA,2CAGJ,gCAEIZ,EAAOa,KAAI,SAAUC,EAAOC,GACpB,OACI,qBAAIH,UAAWG,EAAM,GAAK,EAAI,OAAS,MAAvC,UACI,qBAAIH,UAAU,eAAd,UAA8BG,EAAM,EAApC,OACA,6BAAKD,EAAME,OACX,oBAAIJ,UAAU,eAAd,SAA8BE,EAAMG,SACpC,oBAAIL,UAAU,eAAd,SAA8BvB,EAASyB,EAAMxB,YAC7C,oBAAIsB,UAAU,eAAd,UA0BtBM,EA1B6DJ,EAAMK,KA2B1EC,OAAYF,EAAI,KAAMG,OAAO,6BADxC,IAAkBH,iB,GA/EAI,IAAMC,WCFxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c47bcf4e.chunk.js","sourcesContent":["import React from \"react\";\nimport * as moment from \"moment\";\n\n\nconst scores = 'https://www.pribluda.de/api/lines/public/scores?since=0';\nconst stats = 'https://www.pribluda.de/api/lines/public/stats';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            scores: [],\n            stats: {\n                totalGames: 0,\n                totalTime: 0\n            }\n        }\n    }\n\n    componentDidMount() {\n        fetch(scores)\n            .then(response => response.json())\n            .then(data => this.setState({scores: data}));\n\n        fetch(stats)\n            .then(response => response.json())\n            .then(data => this.setState({stats: data}));\n    }\n\n    render() {\n        const {scores} = this.state\n\n        return (\n            <div id=\"highscores\">\n                <dl id=\"stats\" >\n                    <dt>Total games:</dt>\n                    <dd>{this.state.stats.totalGames}</dd>\n                    <dt>Total time spent (D:H:M:S) :</dt>\n                    <dd>{msToTime(this.state.stats.totalTime)}</dd>\n                </dl>\n                <table className=\"scoreTable\">\n                    <thead className=\"header\">\n                    <tr>\n                        <td className=\"rightAligned\">#</td>\n                        <td>Name</td>\n                        <td>Points</td>\n                        <td>Time spent</td>\n                        <td>Date</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        scores.map(function (score, idx) {\n                                return (\n                                    <tr className={idx % 2 == 0 ? 'even' : 'odd'}>\n                                        <td className=\"rightAligned\">{idx + 1}.</td>\n                                        <td>{score.name}</td>\n                                        <td className=\"rightAligned\">{score.points}</td>\n                                        <td className=\"rightAligned\">{msToTime(score.duration)}</td>\n                                        <td className=\"rightAligned\">{msToDate(score.time)}</td>\n                                    </tr>\n                                )\n                            }\n                        )\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n}\nfunction msToTime(duration) {\n    var milliseconds = parseInt((duration % 1000) / 100),\n        seconds = Math.floor((duration / 1000) % 60),\n        minutes = Math.floor((duration / (1000 * 60)) % 60),\n        hours = Math.floor((duration / (1000 * 60 * 60)) %24),\n        days = Math.floor((duration / (1000 * 60 * 60 *24 )));\n\n    hours = (hours < 10) ? \"0\" + hours : hours;\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n    return  days + \":\" + hours + \":\" + minutes + \":\" + seconds ;\n}\nfunction msToDate(s) {\n    return moment.unix(s / 1000).format(\"DD MMM YYYY hh:mm a\")\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './index.module.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}